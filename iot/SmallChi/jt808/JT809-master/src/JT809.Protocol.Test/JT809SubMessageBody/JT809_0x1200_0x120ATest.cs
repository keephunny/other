using System;
using System.Collections.Generic;
using System.Text;
using Xunit;
using JT809.Protocol;
using JT809.Protocol.Extensions;
using JT809.Protocol.MessageBody;
using JT809.Protocol.Exceptions;
using JT809.Protocol.SubMessageBody;
using JT809.Protocol.Enums;
using JT809.Protocol.Internal;

namespace JT809.Protocol.Test.JT809SubMessageBody
{
    public class JT809_0x1200_0x120ATest
    {
        private JT809Serializer JT809Serializer = new JT809Serializer();

        private JT809Serializer JT809_2019_Serializer = new JT809Serializer(new DefaultGlobalConfig() { Version = JT809Version.JTT2019 });
        [Fact]
        public void Test1()
        {
            JT809_0x1200_0x120A jT809_0X1200_0X120A = new JT809_0x1200_0x120A
            {
                 DriverID = "123456789123456789",
                 DriverName = "smallchi",
                 Licence= "abcdef123456789",
                 OrgName= "www123456789"
            };
            var hex = JT809Serializer.Serialize(jT809_0X1200_0X120A).ToHexString();
            //"73 6D 61 6C 6C 63 68 69 00 00 00 00 00 00 00 00 31 32 33 34 35 36 37 38 39 31 32 33 34 35 36 37 38 39 00 00 61 62 63 64 65 66 31 32 33 34 35 36 37 38 39 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 77 77 77 31 32 33 34 35 36 37 38 39 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
            Assert.Equal("736D616C6C63686900000000000000003132333435363738393132333435363738390000616263646566313233343536373839000000000000000000000000000000000000000000000000007777773132333435363738390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", hex);Assert.Equal("736D616C6C63686900000000000000003132333435363738393132333435363738390000616263646566313233343536373839000000000000000000000000000000000000000000000000007777773132333435363738390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", hex);
        }

        [Fact]
        public void Test2()
        {
            var bytes = "73 6D 61 6C 6C 63 68 69 00 00 00 00 00 00 00 00 31 32 33 34 35 36 37 38 39 31 32 33 34 35 36 37 38 39 00 00 61 62 63 64 65 66 31 32 33 34 35 36 37 38 39 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 77 77 77 31 32 33 34 35 36 37 38 39 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00".ToHexBytes();
            JT809_0x1200_0x120A jT809_0X1200_0X120A = JT809Serializer.Deserialize<JT809_0x1200_0x120A>(bytes);
            Assert.Equal("123456789123456789", jT809_0X1200_0X120A.DriverID);
            Assert.Equal("smallchi", jT809_0X1200_0X120A.DriverName);
            Assert.Equal("abcdef123456789", jT809_0X1200_0X120A.Licence);
            Assert.Equal("www123456789", jT809_0X1200_0X120A.OrgName);
        }

        [Fact]
        public void Test_2019_1()
        {
            JT809_0x1200_0x120A jT809_0X1200_0X120A = new JT809_0x1200_0x120A
            {
                DriverID = "123456789123456789",
                DriverName = "smallchi",
                Licence = "abcdef123456789",
                OrgName = "www123456789",
                ValidDate = DateTime.Parse("2020-04-23 22:22:22"),
                SourceDataType=0x02,
                SourceMsgSn=1
            };
            var hex = JT809_2019_Serializer.Serialize(jT809_0X1200_0X120A).ToHexString();
            
            Assert.Equalhex); 
            
        }

        [Fact]
        public void Test_2019_2()
        {
            var bytes = "000200000001736D616C6C63686900000000000000003132333435363738393132333435363738390000616263646566313233343536373839000000000000000000000000000000000000000000000000007777773132333435363738390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005EA1A49E".ToHexBytes();
            JT809_0x1200_0x120A jT809_0X1200_0X120A = JT809_2019_Serializer.Deserialize<JT809_0x1200_0x120A>(bytes);
            Assert.Equal("123456789123456789", jT809_0X1200_0X120A.DriverID);
            Assert.Equal("smallchi", jT809_0X1200_0X120A.DriverName);
            Assert.Equal("abcdef123456789", jT809_0X1200_0X120A.Licence);
            Assert.Equal("www123456789", jT809_0X1200_0X120A.OrgName);
            Assert.Equal(DateTime.Parse("2020-04-23 22:22:22"), jT809_0X1200_0X120A.ValidDate);
            Assert.Equal(0x02, jT809_0X1200_0X120A.SourceDataType);
            Assert.Equal(1u, jT809_0X1200_0X120A.SourceMsgSn);
        }
    }
}
